#!/usr/bin/env python3
"""
HLS fails if it encounters an ignored file:

  https://github.com/haskell/haskell-language-server/issues/2692

This Python script parses the log generated by HLS, and ignores all failures
if they're explicitly ignored in `hie.yaml`.

Usage:

  parse_hls_log <file>

"""
import re
import sys

NONE_CRADLE_RE = re.compile("None cradle found for (.*), ignoring the file")
FILES_FAILED_MSG = "Files that failed:"

def get_ignored_files(lines):
  for line in lines:
    cradle_match = NONE_CRADLE_RE.search(line)
    if cradle_match is not None:
      yield cradle_match.groups()[0].strip()

def get_failed_files(lines):
  lines = iter(lines)
  for line in lines:
    if line.startswith(FILES_FAILED_MSG):
      for line in lines:
        if line.startswith(" * "):
          yield line[3:].strip()

def has_error(lines):
  for line in lines:
    if "| Error |" in line:
      return True
    if "[ Error ]" in line:
      return True
  return False

if __name__ == "__main__":
  with open(sys.argv[1]) as log:
    lines = log.readlines()

    ignored = set(get_ignored_files(lines))
    failed = set(get_failed_files(lines))
    real_failed = failed - ignored

    if real_failed:
      print("HLS failed on:", file=sys.stderr)
      for fail in real_failed:
        print(f" * {fail}", file=sys.stderr)
      sys.exit(1)

    if has_error(lines):
      print("Error in log", file=sys.stderr)
      sys.exit(1)

  if ignored:
    print("All failing files were ignored by user")
  else:
    print("No files ignored, no files failed.")
